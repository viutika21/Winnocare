trigger:
- main


variables:
  projectName: 'Winnocare'

stages:
  - stage: Build
    displayName: Build Ionic - Android projects
    jobs:
      # Debug build
      - job: Build_Ionic_Android_Debug
        variables:
          - name: buildConfiguration
            value: debug
        displayName: Build Debug
        pool:
            name: default
            demands:
            - agent.name -equals Ridhams-MacBook-Air
        steps:   
          - script: npm install -g @ionic/cli
            displayName: 'Install Ionic CLI'
          
          - task: Npm@1
            inputs:
              workingDir: '$(Build.SourcesDirectory)/$(projectName)'
              command: install
            displayName: 'NPM Install'
           
          - powershell: |
              ionic cap build android --no-open
              npx cap copy android
              npx cap update android
              npx cap sync android
              cd android
              ./gradlew assemble$(buildConfiguration)
            workingDirectory: $(Build.SourcesDirectory)/$(projectName)
            displayName: 'Build Android Project'

          - script: |
              sed 's/compile(/implementation(/g' /Users/ridham_patel/myagent/_work/1/s/Winnocare/node_modules/phonegap-plugin-barcodescanner/src/android/barcodescanner.gradle > /Users/ridham_patel/myagent/_work/1/s/Winnocare/node_modules/phonegap-plugin-barcodescanner/src/android/barcodescanner_new.gradle
              mv /Users/ridham_patel/myagent/_work/1/s/Winnocare/node_modules/phonegap-plugin-barcodescanner/src/android/barcodescanner_new.gradle /Users/ridham_patel/myagent/_work/1/s/Winnocare/node_modules/phonegap-plugin-barcodescanner/src/android/barcodescanner.gradle
            displayName: 'Replace compile with implementation in barcodescanner.gradle file' 

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                pwd
                ls -la $(Build.SourcesDirectory)
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)/android/
                echo "***********************************************************"
          - task: Gradle@2
            displayName: 'Building Android App'
            inputs:
              workingDirectory: $(Build.SourcesDirectory)/$(projectName)/android
              gradleWrapperFile: $(Build.SourcesDirectory)/$(projectName)/android/gradlew
              gradleOptions: '-Xmx1536m'
              publishJUnitResults: false
              testResultsFiles: '**/TEST-*.xml'
              tasks: assemble$(buildConfiguration)
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: 'default'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                pwd
                ls -la $(Build.SourcesDirectory)
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)/android/
                echo "***********************************************************"
                ls -la $(Build.SourcesDirectory)/$(projectName)/android/app/build/outputs/apk/$(buildConfiguration)

          - task: CopyFiles@2
            displayName: 'Copy Files to: Drop'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/$(projectName)/android/app/build/outputs/apk/$(buildConfiguration)'
              Contents: "app-$(buildConfiguration).apk"
              TargetFolder: '$(build.artifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: Drop'
        
          - task: Bash@3
            displayName: 'Upload file to S3'
            inputs:
              targetType: 'inline'
              script: |
                aws s3 cp '$(build.artifactStagingDirectory)/app-debug.apk' s3://winnocare --endpoint-url https://winnocare.s3.ca-central-1.wasabisys.com --region ca-central-1 --profile winnocare





